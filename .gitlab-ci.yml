
image: node:20

stages:
  - build
  - deploy
  - publish

variables:
  GITLAB_PACKAGE_REGISTRY: "registry.gitlab.com"
  GITLAB_PROJECT_PATH: "@backlogic/UI/service-builder-vscode"  # Replace with your actual GitLab project path
  GITHUB_ACCESS_TOKEN: "$GITHUB_ACCESS_TOKEN"
  VSCE_PERSONAL_ACCESS_TOKEN: "your_vsce_personal_access_token"

.pipeline_rules:
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

build:
  extends:
    - .pipeline_rules
  stage: build
  before_script:
    - apt-get update -qy
    # - apt-get install -y nodejs npm jq
    - apt-get install -y jq
    - npm install -g @vscode/vsce
    - npm install -g typescript
    - npm i --save-dev @types/node
    - npm i --save-dev @types/mocha
    - export VSCE_EXTENSION_NAME=$(cat package.json | jq -r .name)
    - export VSCE_EXTENSION_VERSION=$(cat package.json | jq -r .version)
    - export VSCE_PACKAGE_NAME=$VSCE_EXTENSION_NAME-v$VSCE_EXTENSION_VERSION.vsix
    - echo "VSCE_PACKAGE_NAME=$VSCE_PACKAGE_NAME"
    - tsc
  script:
    - npm install
    - vsce package -o ./$VSCE_PACKAGE_NAME
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file $VSCE_PACKAGE_NAME "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/service-builder-vscode/$VSCE_EXTENSION_VERSION/$VSCE_PACKAGE_NAME"'
    - mkdir build
    - cp ./$VSCE_PACKAGE_NAME build/
  artifacts:
    paths:
      - build/

publish-to-github:
  extends:
    - .pipeline_rules
  stage: publish
  image: alpine/git
  script:
    - git push https://bklogic:$GITHUB_ACCESS_TOKEN@github.com/bklogic/ServiceBuilder.git main
  when: manual

publish-to-marketplace:
  extends:
    - .pipeline_rules
  stage: publish
  script:
    - npm install
    - vsce publish -p $VSCE_PERSONAL_ACCESS_TOKEN
  when: manual
