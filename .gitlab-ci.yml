stages:
  - build
  - deploy
  - publish

variables:
  VSCE_PACKAGE_VERSION: $(cat package.json | jq -r .version)
  VSCE_PACKAGE_NAME: service-builder-v$VSCE_PACKAGE_VERSION.vsix
  GITLAB_PACKAGE_REGISTRY: "registry.gitlab.com"
  GITLAB_PROJECT_PATH: "backlogic/UI/service-builder-vscode"  # Replace with your actual GitLab project path

before_script:
  - apt-get update -qy
  - apt-get install -y nodejs npm jq
  - npm install -g vsce

build:
  stage: build
  before_script:
    - echo "VSCE_PACKAGE_NAME=$VSCE_PACKAGE_NAME"
  script:
    - npm install
    - vsce package -o ./$VSCE_PACKAGE_NAME

deploy:
  stage: deploy
  script:
    - mkdir deploy
    - cp ./$VSCE_PACKAGE_NAME deploy/
    - echo "$CI_JOB_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin $GITLAB_PACKAGE_REGISTRY
    - docker tag $VSCE_PACKAGE_NAME $GITLAB_PACKAGE_REGISTRY/$GITLAB_PROJECT_PATH/$VSCE_PACKAGE_NAME
    - docker push $GITLAB_PACKAGE_REGISTRY/$GITLAB_PROJECT_PATH/$VSCE_PACKAGE_NAME
  artifacts:
    paths:
      - deploy/

publish:
  stage: publish
  script:
    - npm install
    - vsce publish -p $VSCE_PERSONAL_ACCESS_TOKEN
  only:
    - master
  when: manual

variables:
  VSCE_PERSONAL_ACCESS_TOKEN: "your_vsce_personal_access_token"
