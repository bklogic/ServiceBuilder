{
	"name": "servicebuilder",
	"displayName": "servicebuilder",
	"description": "service builder",
	"version": "1.0.0",
	"publisher": "backlogic",
	"repository": "https://gitlab.com/backlogic/ui/service-builder-vscode.git",
	"engines": {
		"vscode": "^1.51.1"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onView:servicebuilderExplorer"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": {
			"title": "Service Builder",
			"properties": {
				"servicebuilder.tryServiceEndpoint": {
				  "type": "string",
				  "default": "http://localhost:8080",
				  "description": "Endpoint for TryWithoutSignup service"
				},
				"servicebuilder.tryServiceApiToken": {
					"type": "string",
					"default": "bncxnzghghhgdhsgfgybbbd",
					"description": "API token for TryWithoutSignup service"
				}
			}
		},
		"commands": [
			{
				"command": "servicebuilderExplorer.openResource",
				"title": "Open File"
			},
			{
				"command": "servicebuilderExplorer.openWithJsonViewer",
				"title": "Open with JSON viewer",
				"icon": {
					"light": "resources/light/open-json-viewer.svg",
					"dark": "resources/dark/open-json-viewer.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.connect",
				"title": "Connect",
				"icon": {
					"light": "resources/light/plug.svg",
					"dark": "resources/dark/plug.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.workspace",
				"title": "Connection...",
				"icon": {
					"light": "resources/light/plug.svg",
					"dark": "resources/dark/plug.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.try",
				"title": "Try Without Signup"
			},
			{
				"command": "servicebuilderExplorer.refresh",
				"title": "Refresh Explorer",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.openGettingStarted",
				"title": "GettingStarted"
			},
			{
				"command": "servicebuilderExplorer.openWelcome",
				"title": "Welcome"
			},
			{
				"command": "servicebuilderExplorer.createApplication",
				"title": "New Application",
				"icon": {
					"light": "resources/light/new-folder.svg",
					"dark": "resources/dark/new-folder.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.deployApplication",
				"title": "Deploy Application",
				"icon": {
					"light": "resources/light/sync.svg",
					"dark": "resources/dark/sync.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.createModule",
				"title": "New Module",
				"icon": {
					"light": "resources/light/new-folder.svg",
					"dark": "resources/dark/new-folder.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.deployModule",
				"title": "Deploy Module",
				"icon": {
					"light": "resources/light/sync.svg",
					"dark": "resources/dark/sync.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.createCrudService",
				"title": "New CRUD Service",
				"icon": {
					"light": "resources/light/crud-service.svg",
					"dark": "resources/dark/crud-service.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.createSqlService",
				"title": "New SQL Service",
				"icon": {
					"light": "resources/light/sql-service.svg",
					"dark": "resources/dark/sql-service.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.createQueryService",
				"title": "New Query Service",
				"icon": {
					"light": "resources/light/query-service.svg",
					"dark": "resources/dark/query-service.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.deployService",
				"title": "Deploy Service",
				"icon": {
					"light": "resources/light/sync.svg",
					"dark": "resources/dark/sync.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.copy",
				"title": "Copy"
			},
			{
				"command": "servicebuilderExplorer.paste",
				"title": "Paste"
			},
			{
				"command": "servicebuilderExplorer.rename",
				"title": "Rename"
			},
			{
				"command": "servicebuilderExplorer.delete",
				"title": "Delete",
				"icon": {
					"light": "resources/light/trash.svg",
					"dark": "resources/dark/trash.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.genQueryInputOutput",
				"title": "Generate Input and Output",
				"icon": {
					"light": "resources/light/note.svg",
					"dark": "resources/dark/note.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.genQueryInputOutputBindings",
				"title": "Generate Input and Output Bindings",
				"icon": {
					"light": "resources/light/references.svg",
					"dark": "resources/dark/references.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.genSqlInputOutput",
				"title": "Generate Input and Output",
				"icon": {
					"light": "resources/light/note.svg",
					"dark": "resources/dark/note.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.genSqlInputOutputBindings",
				"title": "Generate Input and Output Bindings",
				"icon": {
					"light": "resources/light/references.svg",
					"dark": "resources/dark/references.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.genCrudObject",
				"title": "Generate Object and Read Input",
				"icon": {
					"light": "resources/light/note.svg",
					"dark": "resources/dark/note.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.genCrudInputOutputBindings",
				"title": "Generate Input and Output Bindings",
				"icon": {
					"light": "resources/light/references.svg",
					"dark": "resources/dark/references.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.genCrudTableBindings",
				"title": "Generate Table Bindings",
				"icon": {
					"light": "resources/light/multiple-windows.svg",
					"dark": "resources/dark/multiple-windows.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.generateCrud",
				"title": "Generate CRUD from Table"
			},
			{
				"command": "servicebuilderEditor.testDataSource",
				"title": "Test and Deploy Data Source Configuration",
				"icon": {
					"light": "resources/light/play.svg",
					"dark": "resources/dark/play.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.addTest",
				"title": "Add test",
				"icon": {
					"light": "resources/light/add.svg",
					"dark": "resources/dark/add.svg"
				}
			},
			{
				"command": "servicebuilderExplorer.duplicateTest",
				"title": "Duplicate",
				"icon": {
					"light": "resources/light/copy.svg",
					"dark": "resources/dark/copy.svg"
				}
			},
			{
				"command": "servicebuilderEditor.runTest",
				"title": "Run Test",
				"icon": {
					"light": "resources/light/play.svg",
					"dark": "resources/dark/play.svg"
				}
			},
			{
				"command": "servicebuilderEditor.runTestWithoutCommit",
				"title": "Run Test without Commit",
				"icon": {
					"light": "resources/light/debug-rerun.svg",
					"dark": "resources/dark/debug-rerun.svg"
				}
			},

			{
				"command": "servicedeploymentExplorer.openResource",
				"title": "Open File"
			},
			{
				"command": "servicedeploymentExplorer.refreshAppList",
				"title": "Reload Application List",
				"icon": {
					"light": "resources/light/sync.svg",
					"dark": "resources/dark/sync.svg"
				}
			},
			{
				"command": "servicedeploymentExplorer.refreshApplication",
				"title": "Reload Application",
				"icon": {
					"light": "resources/light/sync.svg",
					"dark": "resources/dark/sync.svg"
				}
			},
			{
				"command": "servicedeploymentExplorer.loadTest",
				"title": "Generate Tests",
				"icon": {
					"light": "resources/light/beaker.svg",
					"dark": "resources/dark/beaker.svg"
				}
			},
			{
				"command": "servicedeploymentExplorer.viewDataSource",
				"title": "View Data Source",
				"icon": {
					"light": "resources/light/database.svg",
					"dark": "resources/dark/database.svg"
				}
			},
			{
				"command": "servicedeploymentExplorer.cleanApplication",
				"title": "Clean Application",
				"icon": {
					"light": "resources/light/trash.svg",
					"dark": "resources/dark/trash.svg"
				}
			},
			{
				"command": "servicedeploymentExplorer.viewService",
				"title": "View Service",
				"icon": {
					"light": "resources/light/book.svg",
					"dark": "resources/dark/book.svg"
				}
			}
		],
		"viewsContainers": {
			"activitybar": [
			  {
				"id": "service-builder",
				"title": "Service Builder",
				"icon": "resources/images/builder-icon.svg"
			  }
			]
		  },
		"views": {
			"service-builder": [
				{
					"id": "servicebuilderExplorer",
					"name": "Applications"
				},
				{
					"id": "servicedeploymentExplorer",
					"name": "Deployments"
				},
				{
					"id": "servicebuilderWorkspace",
					"name": "Workspace"
				}
			]
		},
		"viewsWelcome": [
			{
			  "view": "servicebuilderWorkspace",
			  "contents": "[Try without Signup](command:servicebuilderExplorer.try)\n[Getting Started](command:servicebuilderExplorer.openGettingStarted)"
			}
		  ],
		"menus": {
			"view/title": [
				{
					"command": "servicebuilderExplorer.workspace",
					"when": "view == servicebuilderWorkspace",
					"group": "navigation@7"
				},
				{
					"command": "servicebuilderExplorer.createApplication",
					"when": "view == servicebuilderExplorer",
					"group": "navigation@5"
				},
				{
					"command": "servicebuilderExplorer.refresh",
					"when": "view == servicebuilderExplorer",
					"group": "navigation@7"
				},

				{
					"command": "servicedeploymentExplorer.refreshAppList",
					"when": "view == servicedeploymentExplorer",
					"group": "navigation@7"
				}
			],
			"view/item/context": [
				{
					"command": "servicebuilderExplorer.createModule",
					"when": "view == servicebuilderExplorer && viewItem == application",
					"group": "inline@2"
				},
				{	
					"command": "servicebuilderExplorer.createModule",
					"when": "view == servicebuilderExplorer && viewItem == application",
					"group": "1-new"
				},
				{
					"command": "servicebuilderExplorer.deployApplication",
					"when": "view == servicebuilderExplorer && viewItem == application",
					"group": "2-deploy"
				},
				{
					"command": "servicebuilderExplorer.copy",
					"when": "view == servicebuilderExplorer && viewItem == application || viewItem == service",
					"group": "5-cutcopypaste@2"
				},
				{
					"command": "servicebuilderExplorer.paste",
					"when": "view == servicebuilderExplorer && viewItem == application",
					"group": "5-cutcopypaste@3"
				},
				{
					"command": "servicebuilderExplorer.rename",
					"when": "view == servicebuilderExplorer && viewItem == application",
					"group": "6-modification@1"
				},
				{
					"command": "servicebuilderExplorer.delete",
					"when": "view == servicebuilderExplorer && viewItem == application",
					"group": "6-modification@2"
				},
				{
					"command": "servicebuilderExplorer.createQueryService",
					"when": "view == servicebuilderExplorer && viewItem == module",
					"group": "inline@1"
				},
				{
					"command": "servicebuilderExplorer.createSqlService",
					"when": "view == servicebuilderExplorer && viewItem == module",
					"group": "inline@2"
				},
				{
					"command": "servicebuilderExplorer.createCrudService",
					"when": "view == servicebuilderExplorer && viewItem == module",
					"group": "inline@3"
				},
				{
					"command": "servicebuilderExplorer.createQueryService",
					"when": "view == servicebuilderExplorer && viewItem == module",
					"group": "1_new@1"
				},
				{
					"command": "servicebuilderExplorer.createSqlService",
					"when": "view == servicebuilderExplorer && viewItem == module",
					"group": "1_new@2"
				},
				{
					"command": "servicebuilderExplorer.createCrudService",
					"when": "view == servicebuilderExplorer && viewItem == module",
					"group": "1_new@3"
				},
				{
					"command": "servicebuilderExplorer.deployModule",
					"when": "view == servicebuilderExplorer && viewItem == module",
					"group": "2_deploy"
				},
				{
					"command": "servicebuilderExplorer.copy",
					"when": "view == servicebuilderExplorer && viewItem == module",
					"group": "5-cutcopypaste@2"
				},
				{
					"command": "servicebuilderExplorer.paste",
					"when": "view == servicebuilderExplorer && viewItem == module",
					"group": "5-cutcopypaste@3"
				},
				{
					"command": "servicebuilderExplorer.rename",
					"when": "view == servicebuilderExplorer && viewItem == module",
					"group": "6-modification@1"
				},
				{
					"command": "servicebuilderExplorer.delete",
					"when": "view == servicebuilderExplorer && viewItem == module",
					"group": "6-modification@2"
				},
				{
					"command": "servicebuilderExplorer.generateCrud",
					"when": "view == servicebuilderExplorer && viewItem == module",
					"group": "8-generate"
				},
				{
					"command": "servicebuilderExplorer.genQueryInputOutputBindings",
					"when": "view == servicebuilderExplorer && viewItem == queryservice",
					"group": "inline@2"
				},
				{
					"command": "servicebuilderExplorer.genQueryInputOutput",
					"when": "view == servicebuilderExplorer && viewItem == queryservice",
					"group": "1_action@1"
				},
				{
					"command": "servicebuilderExplorer.genQueryInputOutputBindings",
					"when": "view == servicebuilderExplorer && viewItem == queryservice",
					"group": "1_action@2"
				},
				{
					"command": "servicebuilderExplorer.deployService",
					"when": "view == servicebuilderExplorer && viewItem == queryservice",
					"group": "2_deploy"
				},
				{
					"command": "servicebuilderExplorer.copy",
					"when": "view == servicebuilderExplorer && viewItem == queryservice",
					"group": "5-cutcopypaste@2"
				},
				{
					"command": "servicebuilderExplorer.paste",
					"when": "view == servicebuilderExplorer && viewItem == queryservice",
					"group": "5-cutcopypaste@3"
				},
				{
					"command": "servicebuilderExplorer.rename",
					"when": "view == servicebuilderExplorer && viewItem == queryservice",
					"group": "6-modification@1"
				},
				{
					"command": "servicebuilderExplorer.delete",
					"when": "view == servicebuilderExplorer && viewItem == queryservice",
					"group": "6-modification@2"
				},
				{
					"command": "servicebuilderExplorer.genSqlInputOutputBindings",
					"when": "view == servicebuilderExplorer && viewItem == sqlservice",
					"group": "inline@2"
				},
				{
					"command": "servicebuilderExplorer.genSqlInputOutput",
					"when": "view == servicebuilderExplorer && viewItem == sqlservice",
					"group": "1_action@1"
				},
				{
					"command": "servicebuilderExplorer.genSqlInputOutputBindings",
					"when": "view == servicebuilderExplorer && viewItem == sqlservice",
					"group": "1_action@2"
				},
				{
					"command": "servicebuilderExplorer.deployService",
					"when": "view == servicebuilderExplorer && viewItem == sqlservice",
					"group": "2_deploy"
				},
				{
					"command": "servicebuilderExplorer.copy",
					"when": "view == servicebuilderExplorer && viewItem == sqlservice",
					"group": "5-cutcopypaste@2"
				},
				{
					"command": "servicebuilderExplorer.paste",
					"when": "view == servicebuilderExplorer && viewItem == sqlservice",
					"group": "5-cutcopypaste@3"
				},
				{
					"command": "servicebuilderExplorer.rename",
					"when": "view == servicebuilderExplorer && viewItem == sqlservice",
					"group": "6-modification@1"
				},
				{
					"command": "servicebuilderExplorer.delete",
					"when": "view == servicebuilderExplorer && viewItem == sqlservice",
					"group": "6-modification@2"
				},
				{
					"command": "servicebuilderExplorer.genCrudInputOutputBindings",
					"when": "view == servicebuilderExplorer && viewItem == crudservice",
					"group": "inline@2"
				},
				{
					"command": "servicebuilderExplorer.genCrudTableBindings",
					"when": "view == servicebuilderExplorer && viewItem == crudservice",
					"group": "inline@3"
				},
				{
					"command": "servicebuilderExplorer.genCrudObject",
					"when": "view == servicebuilderExplorer && viewItem == crudservice",
					"group": "1_action@1"
				},
				{
					"command": "servicebuilderExplorer.genCrudInputOutputBindings",
					"when": "view == servicebuilderExplorer && viewItem == crudservice",
					"group": "1_action@2"
				},
				{
					"command": "servicebuilderExplorer.genCrudTableBindings",
					"when": "view == servicebuilderExplorer && viewItem == crudservice",
					"group": "1_action@3"
				},
				{
					"command": "servicebuilderExplorer.deployService",
					"when": "view == servicebuilderExplorer && viewItem == crudservice",
					"group": "2_deploy"
				},
				{
					"command": "servicebuilderExplorer.copy",
					"when": "view == servicebuilderExplorer && viewItem == crudservice",
					"group": "5-cutcopypaste@2"
				},
				{
					"command": "servicebuilderExplorer.paste",
					"when": "view == servicebuilderExplorer && viewItem == crudservice",
					"group": "5-cutcopypaste@3"
				},
				{
					"command": "servicebuilderExplorer.rename",
					"when": "view == servicebuilderExplorer && viewItem == crudservice",
					"group": "6-modification@1"
				},
				{
					"command": "servicebuilderExplorer.delete",
					"when": "view == servicebuilderExplorer && viewItem == crudservice",
					"group": "6-modification@2"
				},
				{
					"command": "servicebuilderExplorer.addTest",
					"when": "view == servicebuilderExplorer && viewItem == tests",
					"group": "inline"
				},
				{
					"command": "servicebuilderExplorer.duplicateTest",
					"when": "view == servicebuilderExplorer && viewItem == testfile",
					"group": "inline@1"
				},
				{
					"command": "servicebuilderExplorer.delete",
					"when": "view == servicebuilderExplorer && viewItem == testfile",
					"group": "inline@2"
				},
				{
					"command": "servicebuilderExplorer.rename",
					"when": "view == servicebuilderExplorer && viewItem == testfile",
					"group": "1_ctx@1"
				},
				{
					"command": "servicebuilderExplorer.openWithJsonViewer",
					"when": "view == servicebuilderExplorer && viewItem == bindings",
					"group": "inline@1"
				},
				
				{
					"command": "servicedeploymentExplorer.refreshApplication",
					"when": "view == servicedeploymentExplorer && viewItem == application",
					"group": "inline@1"
				},
				{
					"command": "servicedeploymentExplorer.refreshApplication",
					"when": "view == servicedeploymentExplorer && viewItem == application",
					"group": "1_ctx@1"
				},
				{
					"command": "servicedeploymentExplorer.viewDataSource",
					"when": "view == servicedeploymentExplorer && viewItem == application",
					"group": "2_view@2"
				},
				{
					"command": "servicedeploymentExplorer.cleanApplication",
					"when": "view == servicedeploymentExplorer && viewItem == application",
					"group": "3_clean@2"
				},
				{
					"command": "servicedeploymentExplorer.loadTest",
					"when": "view == servicedeploymentExplorer && viewItem == queryservice",
					"group": "inline@1"
				},
				{
					"command": "servicedeploymentExplorer.loadTest",
					"when": "view == servicedeploymentExplorer && viewItem == sqlservice",
					"group": "inline@1"
				},
				{
					"command": "servicedeploymentExplorer.loadTest",
					"when": "view == servicedeploymentExplorer && viewItem == crudservice",
					"group": "inline@1"
				},
				{
					"command": "servicedeploymentExplorer.loadTest",
					"when": "view == servicedeploymentExplorer && viewItem == queryservice",
					"group": "ctx@1"
				},
				{
					"command": "servicedeploymentExplorer.loadTest",
					"when": "view == servicedeploymentExplorer && viewItem == sqlservice",
					"group": "ctx@1"
				},
				{
					"command": "servicedeploymentExplorer.loadTest",
					"when": "view == servicedeploymentExplorer && viewItem == crudservice",
					"group": "ctx@1"
				},
				{
					"command": "servicedeploymentExplorer.viewService",
					"when": "view == servicedeploymentExplorer && viewItem == queryservice",
					"group": "view@2"
				},
				{
					"command": "servicedeploymentExplorer.viewService",
					"when": "view == servicedeploymentExplorer && viewItem == sqlservice",
					"group": "view@2"
				},
				{
					"command": "servicedeploymentExplorer.viewService",
					"when": "view == servicedeploymentExplorer && viewItem == crudservice",
					"group": "view@2"
				},
				{
					"command": "servicedeploymentExplorer.viewService",
					"when": "view == servicedeploymentExplorer && viewItem == invalidservice",
					"group": "inline@2"
				}
			],
			"editor/title": [
				{
					"command": "servicebuilderEditor.testDataSource",
					"when": "resourceFilename == datasource.json",
					"group": "navigation@1"
				},
				{
					"command": "servicebuilderEditor.runTest",
					"when": "resourceFilename =~ /^test\\w+\\.json$/",
					"group": "navigation@1"
				},
				{
					"command": "servicebuilderEditor.runTestWithoutCommit",
					"when": "resourceFilename =~ /^test\\w+\\.json$/",
					"group": "navigation@2"
				}
			],
			"editor/context": [
				{
					"command": "servicebuilderEditor.testDataSource",
					"when": "resourceFilename == datasource.json",
					"group": "a_datasource@1"
				},
				{
					"command": "servicebuilderEditor.runTest",
					"when": "resourceFilename =~ /^test\\w+\\.json$/",
					"group": "a_test@1"
				},
				{
					"command": "servicebuilderEditor.runTestWithoutCommit",
					"when": "resourceFilename =~ /^test\\w+\\.json$/",
					"group": "a_test@2"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.51.1",
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.4",
		"@types/node": "^12.11.7",
		"eslint": "^7.19.0",
		"@typescript-eslint/eslint-plugin": "^4.14.1",
		"@typescript-eslint/parser": "^4.14.1",
		"glob": "^7.1.6",
		"mocha": "^8.2.1",
		"typescript": "^4.1.3",
		"vscode-test": "^1.5.0"
	},
	"dependencies": {
		"adm-zip": "^0.5.5",
		"axios": "^0.21.1",
		"form-data": "^4.0.0",
		"ftp": "^0.3.10",
		"jsonc-parser": "^0.4.2",
		"minimist": "^0.2.1",
		"mkdirp": "^0.5.1",
		"rimraf": "^2.6.2"
	},
	"extensionDependencies": [
		"vscode.git"
	]
}
